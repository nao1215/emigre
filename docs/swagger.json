{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/health": {
            "get": {
                "description": "This API is for checking server health. The api return server name, version and revision.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Get server health information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "This API crate user record. If the user already exists, it returns an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "create user.",
                "parameters": [
                    {
                        "description": "user name. 0 \u003c len \u003c 21",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "user biography. max length is 300",
                        "name": "biography",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "email address. max length is 320",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.HealthResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "@Description\tName is server name.",
                    "type": "string"
                },
                "revision": {
                    "description": "@Description\tRevision is git revision",
                    "type": "string"
                },
                "version": {
                    "description": "@Description\tVersion is repository tag version",
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "biography",
                "email",
                "id",
                "name"
            ],
            "properties": {
                "biography": {
                    "description": "Biography is user self introduction",
                    "type": "string",
                    "maxLength": 300,
                    "minLength": 1
                },
                "email": {
                    "description": "Email is user email address",
                    "type": "string",
                    "maxLength": 320
                },
                "id": {
                    "description": "ID is user id. ULID（Universally Unique Lexicographically Sortable Identifier）",
                    "type": "string",
                    "maxLength": 26,
                    "minLength": 26
                },
                "name": {
                    "description": "Name is user name",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                }
            }
        }
    }
}